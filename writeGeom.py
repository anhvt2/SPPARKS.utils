
import numpy as np
import glob, os
from natsort import natsorted, ns # natural-sort
import pyvista
import vtk
from vtk.util.numpy_support import vtk_to_numpy, numpy_to_vtk

Nx = Ny = Nz = 1

defaultHeaders = [  '6       header\n', 
                    '# Generated by writeGeom.py\n', 
                    'grid    a %d    b %d    c %d\n' % (Nx, Ny, Nz), 
                    'size    x %d    y %d    z %d\n' % (Nx, Ny, Nz), 
                    'origin    x 0.000    y 0.000    z 0.000\n', 
                    'homogenization  1\n', 
                    'microstructures 2\n']

def writeGeom(geomFileName, geom, headers=defaultHeaders):
    """
    Parameters
    ----------
    - geom (np.ndarray): 3D numpy array to be saved
    - complete headers for geom (no sanity check)
    - fileName: output file
    Returns
    -------
    .geom file written in fileName    
    """
    geom = geom.T.flatten()

    f = open(geomFileName, 'w')

    ### write headers
    for i in range(len(headers)):
        f.write(headers[i])

    ### write geom output
    num_lines = int(np.floor(len(geom)) / 10)
    num_elems_last_line = int(len(geom) % 10)

    for j in range(int(num_lines)):
        for k in range(10):
            idx = int(j*10 + k)
            f.write('%10d' % int(geom[idx]))
        f.write('\n')

    if num_elems_last_line > 0:
        for idx in range(-num_elems_last_line,0):
            f.write('%10d' % int(geom[idx]))

    f.close()
